name: CI and Migrations on Deploy

on:
  push:
    branches:
      - ai_main_a6948c89fd06

jobs:
  build-and-migrate:
    runs-on: ubuntu-latest
    env:
      DEPLOY_URL: ${{ secrets.DEPLOY_URL }} # e.g. https://your-app.example.com
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'pnpm'

      - name: Setup pnpm
        run: npm install -g pnpm@8

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run lint
        run: pnpm run lint || true

      - name: Run tests
        run: pnpm test || true

      - name: Build
        run: pnpm run build

      - name: Wait for deployment to become available
        run: |
          if [ -z "$DEPLOY_URL" ]; then echo "DEPLOY_URL secret not set"; exit 1; fi
          echo "Waiting for $DEPLOY_URL to respond..."
          for i in {1..12}; do
            status=$(curl -s -o /dev/null -w "%{http_code}" "$DEPLOY_URL" || echo "000")
            if [ "$status" = "200" ] || [ "$status" = "301" ] || [ "$status" = "302" ]; then
              echo "Deployment reachable (HTTP $status)"; break
            fi
            echo "Attempt $i: $status - retrying in 10s..."; sleep 10
            if [ $i -eq 12 ]; then echo "Deployment not responding"; exit 1; fi
          done

      - name: Run DB migrations via API
        env:
          MIGRATE_ENDPOINT: ${{ env.DEPLOY_URL }}/api/migrations/run
        run: |
          echo "Calling migrations endpoint: $MIGRATE_ENDPOINT"
          for i in {1..6}; do
            resp=$(curl -sS -X GET "$MIGRATE_ENDPOINT" -H "Accept: application/json" || true)
            echo "$resp" | jq -c '.' || echo "$resp"
            ok=$(echo "$resp" | jq -r '.ok // empty')
            if [ "$ok" = "true" ]; then echo "Migrations applied or skipped successfully"; exit 0; fi
            echo "Migration attempt $i failed or not ready, retrying in 10s..."; sleep 10
          done
          echo "Migrations failed after retries"; exit 1

      - name: Verify introspection
        env:
          INTROSPECT_ENDPOINT: ${{ env.DEPLOY_URL }}/api/_introspect
        run: |
          echo "Calling introspect endpoint: $INTROSPECT_ENDPOINT"
          curl -sS "$INTROSPECT_ENDPOINT" | jq -c '.' || true
